import networkx as nx
G = nx.DiGraph([(9, 10), (2, 11), (3, 11), (7, 13), (8, 17), (3, 16), (6, 16),
                (9, 19), (4, 14), (1, 18), (3, 19), (1, 2), (3, 21), (1, 22), (1, 23),
                (1, 25), (6, 25), (8, 24), (2, 3), (3, 4), (4, 5), (1, 5), (2, 5),
                (5, 6), (6, 7), (2, 7), (3, 7), (7, 8), (4, 8), (8, 9), (4, 9), (1, 9),
                (6, 9), (10, 11), (11, 12), (12, 13), (15, 16), (13, 14), (14, 15),
                (16, 17), (17, 18), (18, 19), (19, 20), (20, 21), (21, 22), (22, 23),
                (23, 24), (24, 25), (21, 25), (16, 25), (13, 23), (13, 20), (18, 24),
                (17, 23), (17, 22), (17, 21), (16, 20), (15, 19), (15, 20), (14, 21),
                (12, 18), (11, 16)])
G = nx.DiGraph([(1, 2), (2, 3), (1, 3), (2, 4), (1, 5), (3, 5), (4, 5)])
roots = (v for v, d in G.in_degree() if d == 0)
leaves = [v for v, d in G.out_degree() if d == 0]
all_paths = []
for root in roots:
    paths = nx.all_simple_paths(G, root, leaves)
    all_paths.extend(paths)

print(all_paths)